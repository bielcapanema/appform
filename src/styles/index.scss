@import 'loading';

$input: #efeeed;
$input-placeholder: #939393;
$input-focus: #333333;
$input-border: #efeeed;
$input-invalid: #eb4a46;

$button: #ffffff;
$button-bg: #00c8b3;
$button-disabled: #dddcdc;
$button-disabled-bg: #f6f6f6;

body {
  font-family: Avenir Next, Avenir, SegoeUI, sans-serif;
}

form {
  margin: 2em 0;
}


.container {
  max-width: 600px;
  margin: 0 auto;
  padding: 16px;

  .register {
    /**
    * Make the field a flex-container, reverse the order so label is on top.
    */

    button {
      margin-top: 30px;
      color: $button;
      background: $button-bg;
      height: 60px;
      width: 100%;
      border: none;
      border-radius: 30px;
      font-size: 1.5em;
      outline: none;
      cursor: pointer;

      &:hover {
        opacity: .7;
      }

      &:active {
        opacity: .5;
      }

      &.disabled {
        color: $button-disabled;
        background: $button-disabled-bg;
        cursor: not-allowed;

        &:hover {
          opacity: 1;
        }

        &:active {
          opacity: 1;
        }
      }

      &.loading {
        cursor: wait;
      }
    }

    .field {
      display: flex;
      flex-flow: column-reverse;
      margin-bottom: 1em;
    }

    /**
    * Add a transition to the label and input.
    * I'm not even sure that touch-action: manipulation works on
    * inputs, but hey, it's new and cool and could remove the 
    * pesky delay.
    */
    label,
    input {
      transition: all 0.2s;
      touch-action: manipulation;
    }

    input {
      font-size: 1.5em;
      border: 0;
      border-bottom: 2px solid $input-focus;
      font-family: inherit;
      -webkit-appearance: none;
      border-radius: 0;
      padding: 0;
      cursor: text;
      color: $input;

      &::-webkit-input-placeholder {
        color: $input;
      }
    }

    input:focus {
      outline: 0;
      border-bottom: 2px solid $input-focus;
      color: $input-focus;
    }

    label {
      letter-spacing: 0.05em;
    }

    /**
    * Translate down and scale the label up to cover the placeholder,
    * when following an input (with placeholder-shown support).
    * Also make sure the label is only on one row, at max 2/3rds of the
    * fieldâ€”to make sure it scales properly and doesn't wrap.
    */
    input:placeholder-shown+label {
      cursor: text;
      max-width: 66.66%;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      transform-origin: left bottom;
      transform: translate(0, 2.125rem) scale(1.5);
      color: $input-placeholder;
    }

    /**
    * By default, the placeholder should be transparent. Also, it should 
    * inherit the transition.
    */
    ::-webkit-input-placeholder {
      opacity: 0;
      transition: inherit;
    }

    /**
    * Show the placeholder when the input is focused.
    */
    input:focus::-webkit-input-placeholder {
      opacity: 1;
    }

    /**
    * When the element is focused, remove the label transform.
    * Also, do this when the placeholder is _not_ shown, i.e. when 
    * there's something in the input at all.
    */
    input:not(:placeholder-shown)+label,
    input:focus+label {
      transform: translate(0, 0) scale(1);
      cursor: pointer;
      color: $input-focus;
    }

    input:not(:placeholder-shown) {
      color: $input-focus;
    }
  }
}